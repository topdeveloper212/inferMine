codetoanalyze/java/topl/annot/Annot.java, codetoanalyze.java.topl.Annot.testA_Bad(codetoanalyze.java.topl.A):void, 0, TOPL_ERROR, no_bucket, ERROR, [call to codetoanalyze.java.topl.A.sourceUnlessSafe():java.lang.Object,call to codetoanalyze.java.topl.Annot.sink(java.lang.Object):void]
codetoanalyze/java/topl/annot/Annot.java, codetoanalyze.java.topl.Annot.testF_Bad(codetoanalyze.java.topl.F):void, 0, TOPL_ERROR, no_bucket, ERROR, [call to codetoanalyze.java.topl.F.sourceIfDanger():java.lang.Object,call to codetoanalyze.java.topl.Annot.sink(java.lang.Object):void]
codetoanalyze/java/topl/annot/Annot.java, codetoanalyze.java.topl.Annot.testG_Bad(codetoanalyze.java.topl.G):void, 0, TOPL_ERROR, no_bucket, ERROR, [call to codetoanalyze.java.topl.G.sourceIfDanger():java.lang.Object,call to codetoanalyze.java.topl.Annot.sink(java.lang.Object):void]
codetoanalyze/java/topl/annot/Annot.java, codetoanalyze.java.topl.Annot.testH_Bad(codetoanalyze.java.topl.H):void, 0, TOPL_ERROR, no_bucket, ERROR, [call to codetoanalyze.java.topl.H.sourceIfDanger():java.lang.Object,call to codetoanalyze.java.topl.Annot.sink(java.lang.Object):void]
